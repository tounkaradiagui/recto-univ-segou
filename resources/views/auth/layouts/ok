@extends('layouts.app')

@section('content')
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">{{ __('Reset Password') }}</div>

                <div class="card-body">
                    @if (session('status'))
                        <div class="alert alert-success" role="alert">
                            {{ session('status') }}
                        </div>
                    @endif

                    <form method="POST" action="{{ route('password.email') }}">
                        @csrf

                        <div class="row mb-3">
                            <label for="email" class="col-md-4 col-form-label text-md-end">{{ __('Email Address') }}</label>

                            <div class="col-md-6">
                                <input id="email" type="email" class="form-control @error('email') is-invalid @enderror" name="email" value="{{ old('email') }}" required autocomplete="email" autofocus>

                                @error('email')
                                    <span class="invalid-feedback" role="alert">
                                        <strong>{{ $message }}</strong>
                                    </span>
                                @enderror
                            </div>
                        </div>

                        <div class="row mb-0">
                            <div class="col-md-6 offset-md-4">
                                <button type="submit" class="btn btn-primary">
                                    {{ __('Send Password Reset Link') }}
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection








"nom" => $row['nom'],
"prenom" => $row['prenom'],
"email" => $row['email'],
"telephone" => $row['telephone'],
"adresse" => $row['adresse'],
"role" => 2, //User1,
"status" => 1,
'password' => Hash::make('password')


if(Auth::check() && Auth::user()->status)
{
    $banned = Auth::user()->status == "1";
    Auth::logout();

    if($banned == 1)
    {
        $message = 'your account has banned contact admin';
    }
    return redirect()->route('login')->with('status', $message)->withErrors(['email' => 'your account has banned contact admin']);
}




public function login(Request $request)
{
    $input = $request->all();
    $this->validate($request, [
        'email' => 'required|email',
        'password' => 'required'
    ]);

    if(auth()->attempt(array('email' => $input['email'], 'password' => $input['password'])))
    {
        if(auth()->user()->is_admin == 0)
        {
            return redirect()->route('admin.dashboard');
        }else{
            return redirect()->route('users.dashboard');
        }
    }else{
        return redirect()->route('login')->with('error', "Votre compte a été desactivé,
        veuillez contacté l'administrateur !");
    }
}



public function handle(Request $request, Closure $next)
    {
        if(auth()->user()->role == 'admin')
        {
            return $next($request);
        }else{
            return redirect('/home')->with("Vous n'etes pas autoriser à accéder à cette page");
        }
    }












    public function login(Request $request)
    {
        $input = $request->all();
        $this->validate($request, [
            'email' => 'required|email',
            'password' => 'required'
        ]);

        if(auth()->attempt(array('email' => $input['email'], 'password' => $input['password'])))
        {
            if(auth()->user()->role == 'admin')
            {
                return redirect()->route('admin.dashboard');
            }else{
                return redirect()->route('users.dashboard');
            }
        }else{
            return redirect()->route('login')->with('error', "Votre compte a été desactivé,
            veuillez contacté l'administrateur !");
        }
    }


    <!-- ##################### -->
    {
        $request->validate([
            'matricule' => 'required',
            'nom' => 'required',
            'prenom' => 'required',
            'email' => 'required|email',
            'telephone' => 'required',
            'date_de_naissance' => 'required',
            'statut' => 'required',
            
        ]);
        
        try {
            DB::beginTransaction();
            
            //la forme logique pour enregister les données des étudiants avec laravel

            $create_etudiant = Etudiant::create([
                'matricule' => $request->matricule,
                'nom' => $request->nom,
                'prenom' => $request->prenom,
                'email' => $request->email,
                'telephone' => $request->telephone,
                'statut' => $request->statut,
                'etat_candidat' => 'non_inscrit',
                'adresse' => $request->adresse,
                'date_de_naissance' => $request->date_de_naissance,              
                'age' => $request->age,              
                'lieu_de_naissance' => $request->lieu_de_naissance,              
                'niveau' => $request->niveau,              
                'faculte' => $request->faculte,              
                'filiere' => $request->filiere,              
                'semestre' => $request->semestre,              
                'diplome' => $request->diplome,              
                'annee' => $request->annee,              
                // 'numero_de_place' => $request->numero_de_place,              
                // 'scolarite' => $request->scolarite,              
                // 'etablissement' => $request->etablissement,              
                // 'resultat' => $request->resultat,              
                // 'mention' => $request->mention,              
                // 'matricule_def' => $request->matricule_def,              
                // 'nom_pere' => $request->nom_pere,              
                // 'prenom_pere' => $request->prenom_pere,              
                // 'profession_pere' => $request->profession_pere,              
                // 'telephone_pere' => $request->telephone_pere,              
                // 'residence_pere' => $request->residence_pere,              
                // 'nom_mere' => $request->nom_mere,              
                // 'prenom_mere' => $request->prenom_mere,              
                // 'profession_mere' => $request->profession_mere,              
                // 'telephone_mere' => $request->telephone_mere,              
                // 'residence_mere' => $request->residence_mere,              
               
            ]);

            if(!$create_etudiant)
            {
                DB::rollBack();
                return back()->with('error', "Quelque chose s'est mal passée lors de l'enregistrement de données !");
            }

            DB::commit();
            return redirect()->route('list-etudiants')->with('success', "L'étudiant a été enregistré avec succès !");

        } catch (\Throwable $th) {
            DB::rollBack();
            throw $th;
        }
    }
    <!-- ###################### -->